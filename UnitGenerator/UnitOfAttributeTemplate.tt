<#@ template debug="false" hostspecific="false" language="C#" linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY NullableUnitGenerator. DO NOT CHANGE IT.
// </auto-generated>
#pragma warning disable CS8669
#pragma warning disable CS8625
using System;
using System.Collections.Generic;
using System.Linq;

namespace NullableUnitGenerator
{
    [AttributeUsage(AttributeTargets.Struct, AllowMultiple = false)]
    internal class UnitOfAttribute : Attribute
    {
        public Type Type { get; }
        public UnitGenerateOptions Options { get; }
        public string Format { get; }

        public UnitOfAttribute(Type type, UnitGenerateOptions options = UnitGenerateOptions.None, string toStringFormat = null)
        {
            this.Type = type;
            this.Options = options;
            this.Format = toStringFormat;
        }
    }

    [Flags]
    internal enum UnitGenerateOptions
    {
        None = 0,
        ImplicitOperator = 1,
        ParseMethod = 2,
        MinMaxMethod = 4,
        ArithmeticOperator = 8,
        ValueArithmeticOperator = 16,
        Comparable = 32,
        Validate = 64,
        JsonConverter = 128,
        MessagePackFormatter = 256,
        DapperTypeHandler = 512,
        EntityFrameworkValueConverter = 1024,
        WithoutComparisonOperator = 2048,
        JsonConverterDictionaryKeySupport = 4096,
        StandardPrimitive = ParseMethod | MinMaxMethod | ArithmeticOperator | ValueArithmeticOperator | Comparable,
    }

    [AttributeUsage(AttributeTargets.Struct | AttributeTargets.Class, AllowMultiple = false, Inherited = true)]
    internal class UnitOfOpenApiDataTypeAttribute : Attribute
    {
        public string Type { get; }
        public string? Format { get; }
        public object? Example { get; }
        public string? Pattern { get; }
        public bool Nullable { get; } = true;

        public UnitOfOpenApiDataTypeAttribute(
            string type,
            string? format = null,
            object? example = null,
            string? pattern = null)
        {
            Type = type;
            Format = format;
            Example = example;
            Pattern = pattern;
        }
    }

    internal static partial class UnitGeneratorHelper
    {
        public static IEnumerable<(Type type, T attr)> GetTypeAndAttributes<T>()
        {
            var asms = AppDomain.CurrentDomain.GetAssemblies();
            var types = asms.SelectMany(asm => asm.GetExportedTypes());
            var typesHasAttr = types.Where(w => w.GetCustomAttributes(typeof(T), false).Any());
            var attrs = typesHasAttr.Select(s => (s.UnderlyingSystemType, (T)s.GetCustomAttributes(typeof(T), false).First()));
            return attrs.ToList();
        }
    }

}