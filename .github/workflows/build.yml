# v で始まる v.0.0.0.0 形式の Tag が付けられたら Relese.

name: Build and Test. Publish when version tag.
on: [push, pull_request]

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  NUGET_XMLDOC_MODE: skip
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  DOTNET_VERSION: 6.0.x
  DOTNET_TFM: netstandard2.0
  REF_NAME: ${{ github.ref_name }}
  
jobs:
  buildtest:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.5.0
    - name: Setup .NET ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v3.0.3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Build
      run: dotnet build -c Release

    - name: Test
      run: dotnet test -c Release --no-build

    - name: Create Package Test
      run: dotnet pack UnitGenerator/NullableUnitGenerator.csproj --configuration Release --no-restore --output nupkgs -p:Version=0.0.0.0

    - name: Create Package
      if: startsWith(github.ref, 'refs/tags/v')
      run: dotnet pack UnitGenerator/NullableUnitGenerator.csproj --configuration Release --no-restore --output nupkgs -p:Version=${REF_NAME#*v}

    - name: Upload Package Assets
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v3.1.2
      with:
        name: packages
        path: nupkgs/
  
  publish:
    name: Publish to GitHub and NuGet
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [buildtest]
    runs-on: ubuntu-latest
    steps:
    - name: Download Package Assets
      uses: actions/download-artifact@v3.0.2
      with:
        name: packages
        path: nupkgs/

    - name: Publish to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.REF_NAME }}
        files: nupkgs/*.nupkg

    - name: Publish to GitHub Packages
      run: dotnet nuget push "nupkgs/*.nupkg" --skip-duplicate --source ${GPR_URL} --api-key ${{ secrets.GITHUB_TOKEN }}
      env:
        GPR_URL: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

    - name: Publish to NuGet
      run: dotnet nuget push "nupkgs/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
