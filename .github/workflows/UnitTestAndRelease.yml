# push されたら UnitTest.
# v で始まる Tag が付けられたら Relese.

name: Release when version tag.
on: [push, pull_request]

jobs:
  test:
    name: Debug Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        dotnet-version: ['6.0.x']
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      NUGET_XMLDOC_MODE: skip
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v3.0.3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Build
      run: dotnet build -c Debug
    - name: Test
      run: dotnet test -c Debug --no-build

  release:
    name: Release
    if: contains(github.ref, 'tags/v')
    needs: [test]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        dotnet-version: ['6.0.x']
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      NUGET_XMLDOC_MODE: skip
    steps:
    - name: Set version
      id: version
      run: |
        REPOSITORY=$(echo ${{ github.repository }} | sed -e "s#.*/##")
        VERSION=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
        echo ::set-output name=version::$VERSION
        echo ::set-output name=filename::$REPOSITORY-$VERSION
        echo "Version $VERSION"
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        submodules: true
    - name: Archive
      run: |
        zip -r ${{ steps.version.outputs.filename }}.zip ./ -x "*.git*"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.version.outputs.filename }}.zip
        asset_name: ${{ steps.version.outputs.filename }}.zip
        asset_content_type: application/zip
