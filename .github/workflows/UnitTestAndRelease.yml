# push されたら UnitTest.
# v で始まる Tag が付けられたら Relese.

name: Release when version tag.
on: [push, pull_request]

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  NUGET_XMLDOC_MODE: skip
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  DOTNET_VERSION: |
    6.0.x
    7.0.x
  # DOTNET_TFM: net6.0
  
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Set VERSION
      id: version
      run: |
        REPOSITORY=$(echo ${{ github.repository }} | sed -e "s#.*/##")
        echo "REPOSITORY=$REPOSITORY" >> $GITHUB_ENV
        if [[ "$github.ref" =~ "tags/v" ]]; then
          TAG_VERSION=$(echo ${{ github.ref }} | sed -e 's#refs/tags/v##g')
          echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV
        fi
        
    - uses: actions/checkout@v3.5.0
    - name: Setup .NET ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v3.0.3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Build
      # run: dotnet build -f ${{ env.DOTNET_TFM }} -c Release
      run: dotnet build -c Release
    - name: Test
      run: dotnet test -c Release --no-build

  build:
    name: Build
    if: contains(github.ref, 'tags/v')
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.0
      - uses: actions/cache@v3.3.1
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Release Build & Pack
        run: dotnet pack --configuration Release --no-restore --output nupkgs -p:Version=$TAG_VERSION

      - name: Upload Build Assets
        uses: actions/upload-artifact@v3.1.2
        with:
          name: packages
          path: nupkgs/

  upload:
    name: Upload to GitHub Releases
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Assets
        uses: actions/download-artifact@v3.0.2
        with:
          name: packages
          path: nupkgs/

      - name: Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: $TAG_VERSION
          files: nupkgs/*.nupkg

  publish-gpr:
    name: Publish to GitHub Packages
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Setup .NET SDK # detected from global.json
        uses: actions/setup-dotnet@v3.0.3

      - name: Download Build Assets
        uses: actions/download-artifact@v3.0.2
        with:
          name: packages
          path: nupkgs/

      - name: Publish to GitHub Packages
        run: dotnet nuget push "nupkgs/*.nupkg" --skip-duplicate --source ${GPR_URL} --api-key ${{ secrets.GITHUB_TOKEN }}
        env:
          GPR_URL: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

  publish-nuget:
    name: Publish to NuGet
    needs: [build]
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Setup .NET SDK # detected from global.json
        uses: actions/setup-dotnet@v3.0.3

      - name: Download Build Assets
        uses: actions/download-artifact@v3.0.2
        with:
          name: packages
          path: nupkgs/

      - name: Publish to NuGet
        run: dotnet nuget push "nupkgs/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
